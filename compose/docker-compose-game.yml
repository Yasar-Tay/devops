version: '3.7'
services:
  spring-boot-gaming-pro-market:
    container_name: spring-boot-gaming-pro-market
    image: sametyaprak/gaming-market:1.0.0-SNAPSHOT
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gamingpromarket
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=changeme
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8092:8092"
    depends_on:
      - create-databases
    networks:
      - my-network

  gaming-pro-market-front-end:
    container_name: gaming-pro-market-front-end
    image: sametyaprak/front-end-game-market:latest
    networks:
      - my-network
    ports:
      - "3000:3000"
    depends_on:
      - spring-boot-gaming-pro-market

  postgres:
    container_name: postgres_container_game
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - my-network

  pgadmin:
    container_name: pgadmin_container_game
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - my-network

  jenkins:
    container_name: jenkins
    image: jenkins/jenkins
    networks:
      - my-network
    ports:
      - "8080:8080"

  create-databases:
    container_name: database_initializer
    image: postgres
    depends_on:
      - postgres
    environment:
      - PGPASSWORD=changeme
    command: |
      sh -c '
        sleep 5 # Wait for the Postgres container to start
        if psql -h postgres -U postgres -lqt | cut -d \| -f 1 | grep -qw "gamingpromarket"; then
          echo "Database gamingpromarket already exists."
        else
          psql -h postgres -U postgres -c "CREATE DATABASE gamingpromarket"
        fi
      '
    networks:
      - my-network

networks:
  my-network:

volumes:
  postgres:
  pgadmin:
